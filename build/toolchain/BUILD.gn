declare_args() {

}

toolchain("toolchain") {
  cc = "emcc"
  cxx = "em++"
  ld = "em++"
  ar = "emar"

  target_triple_command = ""
  sysroot_command = ""

  # Common GN verbiage.
  lib_switch = "-l"
  lib_dir_switch = "-L"

  # Common description prefixes in non-verbose invocation.
  pretty_build_prefix = "üî®üî®"
  pretty_link_prefix = "‚õìÔ∏è‚õìÔ∏è"

  tool("cc") {
    depfile = "{{output}}.deps"
    command = "$cc -o {{output}} -MMD -MF $depfile -c $target_triple_command $sysroot_command {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} {{source}}"
    outputs = [
      "{{target_out_dir}}/{{target_output_name}}/objects/{{source_name_part}}.o",
    ]
    depsformat = "gcc"
    description = "$pretty_build_prefix CC: {{source_name_part}}"
  }

  tool("cxx") {
    depfile = "{{output}}.deps"
    command = "$cxx -o {{output}} -MMD -MF $depfile -c $target_triple_command $sysroot_command {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} {{source}}"
    outputs = [
      "{{target_out_dir}}/objects/{{source_name_part}}.o",
    ]
    depsformat = "gcc"
    description = "$pretty_build_prefix CXX: {{source_name_part}}"
  }

  tool("alink") {
    rspfile = "{{output}}.rsp"
    command = "rm -f {{output}} && $ar rcs {{output}} @$rspfile"
    description = "$pretty_link_prefix Archive: {{output}}"
    rspfile_content = "{{inputs}}"
    outputs = [
      "{{target_out_dir}}/{{target_output_name}}{{output_extension}}",
    ]
    default_output_extension = ".a"
    output_prefix = "lib"
  }

  tool("solink") {
    outfile = "{{target_out_dir}}/{{target_output_name}}{{output_extension}}"
    rspfile = "{{output}}.rsp"
    rspfile_content = "{{inputs}}"
    command = "$ld -o $outfile $target_triple_command $sysroot_command -shared {{ldflags}} {{solibs}} {{libs}} @$rspfile"
    description = "$pretty_link_prefix Shared Library: {{output}}"
    outputs = [
      outfile,
    ]
    default_output_extension = ".so"
    output_prefix = "lib"
  }

  tool("link") {
    outfile = "{{target_out_dir}}/{{target_output_name}}{{output_extension}}"
    rspfile = "$outfile.rsp"
    rspfile_content = "{{inputs}}"
    command = "$ld -o $outfile $target_triple_command $sysroot_command {{ldflags}} {{solibs}} {{libs}} @$rspfile"
    outputs = [
      outfile,
    ]
    default_output_extension = ".wasm"
    description = "$pretty_link_prefix Link Executable: {{target_output_name}}"
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "$pretty_build_prefix Stamp: {{output}}"
  }
}
